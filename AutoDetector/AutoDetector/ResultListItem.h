//*****************************************************************************
// 文件名 : CResultListItem.h
// 
// 概要   : 样品测试结果管理类,本列表位于【结果】对话框上
// 
// 更新日期     修订人       修改内容         
// ------------------------------------------
// 2013-8       崔志雷       新建
// ------------------------------------------
//*****************************************************************************

#pragma once
#include "ResultTable.h"
#include <math.h>
#include "ListItemData.h"

enum ResultListColumn
{
	colSampleNo = 0,			// 样本编号
	colType,					// 样本类型
	colDilution,				// 稀释倍数
	colDept,					// 送检单位名称
	colApplicant,				// 送检人
	colApplyDate,				// 送检日期
	colUpdateDate,				// 样本录入日期
	colProjectName,				// 检测项目名称
	colReagentBatchNum,			// 试剂批号
	colCurveID,					// 标准曲线ID
	colRluString,				// 发光值字符串
	colCV,						// 发光值变异系数
	colTheoryConc,				// 理论浓度
	colFitConc,					// 拟合浓度
	colUnit,					// 浓度单位
	colSurveyor,				// 检验员
	colTestDate,				// 检验日期
	ColumnCount 				// 列个数
};

// *******************************************************
// 样品测试结果信息
// *******************************************************
class CResultListItem : CListItemData
{
public:
	CResultListItem(Result_Key ResultID);
	~CResultListItem();

public:
	// ---------------------------------------------------------------------------
	// 摘要：
	//     判断本项某列单元格是否与另外某项数据同列单元格等价，
	//     当等价时，绘制表格时需要合并为一个单元格
	// 参数：
	//     1.ColumnIndex - 列索引
	//     2.pItemData - 上列表项数据指针
	// ---------------------------------------------------------------------------
	virtual bool IsFieldEquivalent(const int &ColumnIndex,const CListItemData * pItemData);

	// ---------------------------------------------------------------------------
	// 摘要：
	//     取得某单元格内容
	// 参数：
	//     1.ColumnIndex - 列索引
	//     2.contex - 文本内容
	// 返回值：
	//     文本对齐格式
	// ---------------------------------------------------------------------------
	virtual UINT GetCellContex(const int &ColumnIndex,
							   CString & contex);

	// ---------------------------------------------------------------------------
	// 摘要：
	//     取得某列属性
	// ---------------------------------------------------------------------------
	virtual ColumnProperties GetColumnProperties(const int &ColumnIndex);

	// ---------------------------------------------------------------------------
	// 摘要：
	//     取得key值
	// ---------------------------------------------------------------------------
	virtual Result_Key GetKey();

	// ---------------------------------------------------------------------------
	// 摘要：
	//     取得子项目个数
	// ---------------------------------------------------------------------------
	virtual int GetSubItemCount();

	// ---------------------------------------------------------------------------
	// 摘要：
	//     取得记录信息
	// ---------------------------------------------------------------------------
	const ResultRecord & GetResultInfo() const;

private:
	ResultRecord m_ResultRecord;
};
