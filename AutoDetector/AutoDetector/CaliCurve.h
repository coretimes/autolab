//*****************************************************************************
// 文件名 : CaliCurve.h
// 
// 概要   : 定标曲线类
// 
// 更新日期     修订人       修改内容         
// ------------------------------------------
// 2013-9       崔志雷       新建
// ------------------------------------------
//*****************************************************************************
#pragma once
#include "SplineCurve.h"
#include "FourParamsCurve.h"
#include "CurveTable.h"
#include "atltypes.h"

//*****************************************************
// 定标点类型定义
//*****************************************************
struct CaliNode
{
	double conc;											// 标准点理论浓度
	double rlu;												// 标准点发光值
	double FitConc;											// 计算浓度
	vector<double> RluList;									// 发光值表
};

//*****************************************************
// 定标曲线类
//*****************************************************
class CCaliCurve
{
public:
	CCaliCurve();
	~CCaliCurve(void);

	// --------------------------------------------------
	// 摘要：
	//     通过曲线记录数据构造定标曲线
	// 参数：
	//     1.curvedata - 曲线定标数据记录
	// --------------------------------------------------
	CCaliCurve(const CurveRecord &curvedata);

	// --------------------------------------------------
	// 摘要：
	//     通过曲线记录数据更新定标曲线
	// 参数：
	//     1.CurveData - 曲线定标数据记录
	// --------------------------------------------------
	void UpdateCurve(const CurveRecord &CurveData);

	// --------------------------------------------------
	// 摘要：
	//     通过定标点数组更新定标曲线
	// 参数：
	//     1.curvedata - 曲线定标数据记录
	// --------------------------------------------------
	void UpdateCurve(const vector<CaliNode> &CaliNodeArr);

	// --------------------------------------------------
	// 摘要：
	//     增加定标曲线定标点
	// 参数：
	//     1.node - 新插入定标点
	// --------------------------------------------------
	void AddCaliNode(const CaliNode & node);

	// --------------------------------------------------
	// 摘要：
	//     删除指定浓度的定标点
	// 参数：
	//     1.conc - 指定的浓度
	// --------------------------------------------------
	void DeleteCaliNode(const double &conc);

	// --------------------------------------------------
	// 摘要：
	//     判断该曲线是否有效
	// --------------------------------------------------
	bool IsCurveValid(){return !m_bIsCurveErr;}

	// --------------------------------------------------
	// 摘要：
	//     根据指定发光值，计算浓度
	// 参数：
	//     1.rlu - 指定的发光值
	//     2.CurveType - 采用计算类型
	// --------------------------------------------------
	double GetConcByRul (const double& rlu,const CurveType& curvetype = Default);

	// --------------------------------------------------
	// 摘要：
	//     根据指定浓度，计算发光值
	// 参数：
	//     1.conc - 指定的浓度
	//     2.CurveType - 采用计算类型
	// --------------------------------------------------
	double GetRluByConc (const double& conc,const CurveType& curvetype = Default);

	// --------------------------------------------------
	// 摘要：
	//     取得定标点数组
	// --------------------------------------------------
	const vector<CaliNode> &GetCaliNodes() 
	{ return m_CaliNodes;}

	// --------------------------------------------------
	// 摘要：
	//     取得曲线记录
	// --------------------------------------------------
	const CurveRecord &GetCurveRecord() const 
	{ return m_CurveRecord;}

	// --------------------------------------------------
	// 摘要：
	//     绘制曲线函数
	// 参数：
	//     1.pDC - 指定的设备环境
	//     2.CRect - 指定的曲线绘制区域
	// --------------------------------------------------
	void DrawCurve( CDC* pDC,const CRect& rect) const;	

	// --------------------------------------------------
	// 摘要：
	//     保存曲线信息数据至数据库
	// --------------------------------------------------
	void SaveData();	

private:
	// --------------------------------------------------
	// 摘要：
	//     解析曲线数据记录
	// 参数：
	//     1.record - 曲线数据记录
	// --------------------------------------------------
	void _ParseCurveRecord(const CurveRecord & record);

	// --------------------------------------------------
	// 摘要：
	//     生成Spline曲线函数
	// --------------------------------------------------
	void _CreateSpline();

	// --------------------------------------------------
	// 摘要：
	//     生成四参数曲线函数
	// --------------------------------------------------
	void _CreateFourParams();

private:
	vector<CaliNode> m_CaliNodes;							// 定标点数组
	bool m_bIsCurveErr;										// 曲线错误无效标志
	CurveRecord m_CurveRecord;								// 曲线记录数据
	CSplineCurve * m_pSpline;								// spline曲线算法指针
	CFourParamsCurve * m_pFourParams;						// 四参数曲线算法指针
};
